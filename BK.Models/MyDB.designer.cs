#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BK.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="www.bkcoding.com")]
	public partial class MyDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertposts(posts instance);
    partial void Updateposts(posts instance);
    partial void Deleteposts(posts instance);
    #endregion
		
		public MyDBDataContext() : 
				base(global::BK.Models.Properties.Settings.Default.www_bkcoding_comConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<category> category
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<user> user
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<posts> posts
		{
			get
			{
				return this.GetTable<posts>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _category_id;
		
		private string _category_name;
		
		private string _category_otherName;
		
		private EntitySet<posts> _posts;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(decimal value);
    partial void Oncategory_idChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    partial void Oncategory_otherNameChanging(string value);
    partial void Oncategory_otherNameChanged();
    #endregion
		
		public category()
		{
			this._posts = new EntitySet<posts>(new Action<posts>(this.attach_posts), new Action<posts>(this.detach_posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_otherName", DbType="VarChar(50)")]
		public string category_otherName
		{
			get
			{
				return this._category_otherName;
			}
			set
			{
				if ((this._category_otherName != value))
				{
					this.Oncategory_otherNameChanging(value);
					this.SendPropertyChanging();
					this._category_otherName = value;
					this.SendPropertyChanged("category_otherName");
					this.Oncategory_otherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_posts", Storage="_posts", ThisKey="category_id", OtherKey="posts_categry")]
		public EntitySet<posts> posts
		{
			get
			{
				return this._posts;
			}
			set
			{
				this._posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_posts(posts entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_posts(posts entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _user_id;
		
		private bool _user_isdel;
		
		private string _user_loginName;
		
		private string _user_pwd;
		
		private string _user_name;
		
		private bool _user_isAdmin;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(decimal value);
    partial void Onuser_idChanged();
    partial void Onuser_isdelChanging(bool value);
    partial void Onuser_isdelChanged();
    partial void Onuser_loginNameChanging(string value);
    partial void Onuser_loginNameChanged();
    partial void Onuser_pwdChanging(string value);
    partial void Onuser_pwdChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onuser_isAdminChanging(bool value);
    partial void Onuser_isAdminChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_isdel", DbType="Bit NOT NULL")]
		public bool user_isdel
		{
			get
			{
				return this._user_isdel;
			}
			set
			{
				if ((this._user_isdel != value))
				{
					this.Onuser_isdelChanging(value);
					this.SendPropertyChanging();
					this._user_isdel = value;
					this.SendPropertyChanged("user_isdel");
					this.Onuser_isdelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_loginName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string user_loginName
		{
			get
			{
				return this._user_loginName;
			}
			set
			{
				if ((this._user_loginName != value))
				{
					this.Onuser_loginNameChanging(value);
					this.SendPropertyChanging();
					this._user_loginName = value;
					this.SendPropertyChanged("user_loginName");
					this.Onuser_loginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_pwd
		{
			get
			{
				return this._user_pwd;
			}
			set
			{
				if ((this._user_pwd != value))
				{
					this.Onuser_pwdChanging(value);
					this.SendPropertyChanging();
					this._user_pwd = value;
					this.SendPropertyChanged("user_pwd");
					this.Onuser_pwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_isAdmin", DbType="Bit NOT NULL")]
		public bool user_isAdmin
		{
			get
			{
				return this._user_isAdmin;
			}
			set
			{
				if ((this._user_isAdmin != value))
				{
					this.Onuser_isAdminChanging(value);
					this.SendPropertyChanging();
					this._user_isAdmin = value;
					this.SendPropertyChanged("user_isAdmin");
					this.Onuser_isAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.posts")]
	public partial class posts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _posts_id;
		
		private bool _posts_isdel;
		
		private string _posts_tile;
		
		private string _posts_img;
		
		private string _posts_writer;
		
		private System.DateTime _posts_createTime;
		
		private decimal _posts_readCount;
		
		private System.Nullable<decimal> _posts_categry;
		
		private decimal _posts_commentCount;
		
		private string _posts_abstract;
		
		private string _posts_content;
		
		private EntityRef<category> _category;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onposts_idChanging(decimal value);
    partial void Onposts_idChanged();
    partial void Onposts_isdelChanging(bool value);
    partial void Onposts_isdelChanged();
    partial void Onposts_tileChanging(string value);
    partial void Onposts_tileChanged();
    partial void Onposts_imgChanging(string value);
    partial void Onposts_imgChanged();
    partial void Onposts_writerChanging(string value);
    partial void Onposts_writerChanged();
    partial void Onposts_createTimeChanging(System.DateTime value);
    partial void Onposts_createTimeChanged();
    partial void Onposts_readCountChanging(decimal value);
    partial void Onposts_readCountChanged();
    partial void Onposts_categryChanging(System.Nullable<decimal> value);
    partial void Onposts_categryChanged();
    partial void Onposts_commentCountChanging(decimal value);
    partial void Onposts_commentCountChanged();
    partial void Onposts_abstractChanging(string value);
    partial void Onposts_abstractChanged();
    partial void Onposts_contentChanging(string value);
    partial void Onposts_contentChanged();
    #endregion
		
		public posts()
		{
			this._category = default(EntityRef<category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal posts_id
		{
			get
			{
				return this._posts_id;
			}
			set
			{
				if ((this._posts_id != value))
				{
					this.Onposts_idChanging(value);
					this.SendPropertyChanging();
					this._posts_id = value;
					this.SendPropertyChanged("posts_id");
					this.Onposts_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_isdel", DbType="Bit NOT NULL")]
		public bool posts_isdel
		{
			get
			{
				return this._posts_isdel;
			}
			set
			{
				if ((this._posts_isdel != value))
				{
					this.Onposts_isdelChanging(value);
					this.SendPropertyChanging();
					this._posts_isdel = value;
					this.SendPropertyChanged("posts_isdel");
					this.Onposts_isdelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_tile", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string posts_tile
		{
			get
			{
				return this._posts_tile;
			}
			set
			{
				if ((this._posts_tile != value))
				{
					this.Onposts_tileChanging(value);
					this.SendPropertyChanging();
					this._posts_tile = value;
					this.SendPropertyChanged("posts_tile");
					this.Onposts_tileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_img", DbType="VarChar(200)")]
		public string posts_img
		{
			get
			{
				return this._posts_img;
			}
			set
			{
				if ((this._posts_img != value))
				{
					this.Onposts_imgChanging(value);
					this.SendPropertyChanging();
					this._posts_img = value;
					this.SendPropertyChanged("posts_img");
					this.Onposts_imgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_writer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string posts_writer
		{
			get
			{
				return this._posts_writer;
			}
			set
			{
				if ((this._posts_writer != value))
				{
					this.Onposts_writerChanging(value);
					this.SendPropertyChanging();
					this._posts_writer = value;
					this.SendPropertyChanged("posts_writer");
					this.Onposts_writerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_createTime", DbType="DateTime NOT NULL")]
		public System.DateTime posts_createTime
		{
			get
			{
				return this._posts_createTime;
			}
			set
			{
				if ((this._posts_createTime != value))
				{
					this.Onposts_createTimeChanging(value);
					this.SendPropertyChanging();
					this._posts_createTime = value;
					this.SendPropertyChanged("posts_createTime");
					this.Onposts_createTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_readCount", DbType="Decimal(18,0) NOT NULL")]
		public decimal posts_readCount
		{
			get
			{
				return this._posts_readCount;
			}
			set
			{
				if ((this._posts_readCount != value))
				{
					this.Onposts_readCountChanging(value);
					this.SendPropertyChanging();
					this._posts_readCount = value;
					this.SendPropertyChanged("posts_readCount");
					this.Onposts_readCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_categry", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> posts_categry
		{
			get
			{
				return this._posts_categry;
			}
			set
			{
				if ((this._posts_categry != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onposts_categryChanging(value);
					this.SendPropertyChanging();
					this._posts_categry = value;
					this.SendPropertyChanged("posts_categry");
					this.Onposts_categryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_commentCount", DbType="Decimal(18,0) NOT NULL")]
		public decimal posts_commentCount
		{
			get
			{
				return this._posts_commentCount;
			}
			set
			{
				if ((this._posts_commentCount != value))
				{
					this.Onposts_commentCountChanging(value);
					this.SendPropertyChanging();
					this._posts_commentCount = value;
					this.SendPropertyChanged("posts_commentCount");
					this.Onposts_commentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_abstract", DbType="VarChar(350)")]
		public string posts_abstract
		{
			get
			{
				return this._posts_abstract;
			}
			set
			{
				if ((this._posts_abstract != value))
				{
					this.Onposts_abstractChanging(value);
					this.SendPropertyChanging();
					this._posts_abstract = value;
					this.SendPropertyChanged("posts_abstract");
					this.Onposts_abstractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posts_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string posts_content
		{
			get
			{
				return this._posts_content;
			}
			set
			{
				if ((this._posts_content != value))
				{
					this.Onposts_contentChanging(value);
					this.SendPropertyChanging();
					this._posts_content = value;
					this.SendPropertyChanged("posts_content");
					this.Onposts_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_posts", Storage="_category", ThisKey="posts_categry", OtherKey="category_id", IsForeignKey=true, DeleteRule="SET NULL")]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.posts.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.posts.Add(this);
						this._posts_categry = value.category_id;
					}
					else
					{
						this._posts_categry = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
